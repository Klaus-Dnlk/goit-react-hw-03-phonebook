{"version":3,"sources":["components/Styles.module.scss","components/ContactForm.js","components/Filter.js","components/ContactList .js","App.js","index.js","App.module.scss"],"names":["module","exports","ContactForm","state","name","number","contactId","uuidv4","phoneId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","obj","props","newContact","reset","this","onSubmit","className","s","form","htmlFor","formLabel","type","pattern","title","required","inputWindow","onChange","id","btn","Component","filterId","Filter","changeFilter","filterBox","filterLabel","filterInput","placeholder","ContactList","contacts","deleteContact","contactList","map","listItem","onClick","App","filter","addNewContact","toLowerCase","includes","alert","contact","prevState","getVisibleContacts","normalizeFilter","localStorage","getItem","parsedContacts","JSON","parse","console","log","prevProps","setItem","stringify","visibleContacts","section","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,KAAO,qBAAqB,UAAY,0BAA0B,YAAc,4BAA4B,UAAY,0BAA0B,YAAc,4BAA4B,YAAc,4BAA4B,SAAW,yBAAyB,IAAM,sB,mMCG5RC,E,4MACFC,MAAQ,CACJC,KAAM,GACNC,OAAQ,I,EAGZC,UAAYC,c,EACZC,QAAUD,c,EAEVE,aAAe,SAAAC,GACX,MAAsBA,EAAEC,cAAjBP,EAAP,EAAOA,KAAMQ,EAAb,EAAaA,MACb,EAAKC,SAAL,eAAgBT,EAAOQ,K,EAG3BE,aAAe,SAAAJ,GACXA,EAAEK,iBACF,MAAuB,EAAKZ,MACtBa,EAAM,CAACZ,KADb,EAAOA,KACYC,OADnB,EAAaA,QAEb,EAAKY,MAAMC,WAAWF,GACtB,EAAKG,S,EAGTA,MAAQ,WACJ,EAAKN,SAAS,CACVT,KAAM,GACNC,OAAQ,M,4CAGhB,WACI,MAAuBe,KAAKjB,MAArBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OACNS,EAAkDM,KAAlDN,aAAcL,EAAoCW,KAApCX,aAAcH,EAAsBc,KAAtBd,UAAWE,EAAWY,KAAXZ,QAC9C,OACI,sBAAMa,SAAUP,EAAhB,SACI,sBAAKQ,UAAWC,IAAEC,KAAlB,UACI,wBAAOC,QAASnB,EAAWgB,UAAWC,IAAEG,UAAxC,iBAEA,uBACIC,KAAK,OACLvB,KAAK,OACLwB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRR,UAAWC,IAAEQ,YACbnB,MAAOR,EACP4B,SAAUvB,EACVwB,GAAI3B,OAGR,wBAAOmB,QAASjB,EAASc,UAAWC,IAAEG,UAAtC,kBAEA,uBACIC,KAAK,MACLvB,KAAK,SACLwB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRR,UAAWC,IAAEQ,YACbnB,MAAOP,EACP2B,SAAUvB,EACVwB,GAAIzB,OAGZ,wBAAQmB,KAAK,SAASE,MAAM,8FAAmBP,UAAWC,IAAEW,IAA5D,kC,GA9DUC,aAqEXjC,ICrETkC,EAAW7B,cA2BF8B,MAzBf,YAAyC,IAAvBzB,EAAsB,EAAtBA,MAAO0B,EAAe,EAAfA,aACrB,OACA,qBAAKhB,UAAWC,IAAEgB,UAAlB,SACI,uBAAOd,QAASW,EAAUd,UAAWC,IAAEiB,YAAvC,SAEA,uBACIb,KAAK,OACLL,UAAWC,IAAEkB,YACbR,GAAIG,EACJM,YAAY,wBACZ9B,MAAOA,EACPoB,SAAUM,SCYPK,MA1Bf,YAAmD,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,cAC/B,OACE,oBAAIvB,UAAWC,IAAEuB,YAAjB,SACGF,EAASG,KAAI,gBAAGd,EAAH,EAAGA,GAAI7B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAaiB,UAAWC,IAAEyB,SAA1B,UACE,8BACG5C,EADH,KACWC,KAEX,wBACE4C,QAAS,kBAAMJ,EAAcZ,IAC7BX,UAAWC,IAAEW,IACbL,MAAM,wFAHR,sBAJOI,SCDXiB,E,4MAEJ/C,MAAQ,CACNyC,SAAU,CACR,CAACX,GAAI,OAAQ7B,KAAM,gBAAiBC,OAAQ,aAC5C,CAAC4B,GAAI,OAAQ7B,KAAM,iBAAkBC,OAAQ,aAC7C,CAAC4B,GAAI,OAAQ7B,KAAM,gBAAiBC,OAAQ,aAC5C,CAAC4B,GAAI,OAAQ7B,KAAM,iBAAkBC,OAAQ,cAE/C8C,OAAQ,I,EAGVC,cAAgB,SAACpC,GACf,IAAOZ,EAAQY,EAARZ,KACY,EAAKD,MAAMyC,SAC3BG,KAAI,SAACrC,GAAD,OAAOA,EAAEN,KAAKiD,iBAClBC,SAASlD,EAAKiD,eAGXE,MAAM,GAAD,OAAInD,EAAJ,6BAEL,EAAKS,SAAS,CAAC2C,QAASxC,IACxB,EAAKH,UAAS,SAAC4C,GACb,MAAO,CACLb,SAAS,GAAD,mBAAMa,EAAUb,UAAhB,CAA0B5B,U,EAM9CsB,aAAe,SAAA5B,GACb,EAAKG,SAAS,CAAEsC,OAAQzC,EAAEC,cAAcC,S,EAG1C8C,mBAAqB,WACnB,MAA4B,EAAKvD,MAAzBgD,EAAR,EAAQA,OAAQP,EAAhB,EAAgBA,SACVe,EAAkBR,EAAOE,cAE/B,OAAOT,EAASO,QAAO,SAAAK,GAAO,OAC5BA,EAAQpD,KAAKiD,cAAcC,SAASK,O,EAGxCd,cAAgB,SAAAvC,GACd,EAAKO,UAAS,SAAA4C,GAAS,MAAK,CAC1Bb,SAAUa,EAAUb,SAASO,QAAO,SAAAzC,GAAC,OAAIA,EAAEuB,KAAO3B,U,uDAGtD,WAEE,IAAMsC,EAAWgB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMpB,GAElCqB,QAAQC,IAAIJ,GAERA,GACF1C,KAAKP,SAAS,CAAE+B,SAAUkB,M,gCAM9B,SAAmBK,EAAWV,GACxBrC,KAAKjB,MAAMyC,WAAaa,EAAUb,UAGpCgB,aAAaQ,QAAQ,WAAYL,KAAKM,UAAUjD,KAAKjB,MAAMyC,a,oBAI/D,WACE,IAAOc,EAAkEtC,KAAlEsC,mBAAoBN,EAA8ChC,KAA9CgC,cAAeP,EAA+BzB,KAA/ByB,cAAeP,EAAgBlB,KAAhBkB,aAClDa,EAAU/B,KAAKjB,MAAfgD,OACDmB,EAAkBZ,IAExB,OACE,sBAAKpC,UAAWC,IAAEgD,QAAlB,UACE,oBAAIjD,UAAWC,IAAEM,MAAjB,uBACE,cAAC,EAAD,CAAaX,WAAYkC,IAC3B,oBAAI9B,UAAWC,IAAEM,MAAjB,sBACE,cAAC,EAAD,CAAQjB,MAAOuC,EAAQb,aAAcA,IACrC,cAAC,EAAD,CAAaM,SAAU0B,EAAiBzB,cAAeA,W,GAhF/CV,aAuFHe,ICxFfsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B5E,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,QAAU,wB","file":"static/js/main.2678ee9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Styles_form__3n-2a\",\"formLabel\":\"Styles_formLabel__DtS0E\",\"inputWindow\":\"Styles_inputWindow__2oZ5-\",\"filterBox\":\"Styles_filterBox__1hTb9\",\"filterInput\":\"Styles_filterInput__U6WM3\",\"contactList\":\"Styles_contactList__3hZ4N\",\"listItem\":\"Styles_listItem__hYPiT\",\"btn\":\"Styles_btn__1FZyU\"};","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Styles.module.scss';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    contactId = uuidv4()\r\n    phoneId = uuidv4()\r\n\r\n    handleChange = e => {\r\n        const {name, value} = e.currentTarget;\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const {name, number} = this.state\r\n        const obj = {name, number}        \r\n        this.props.newContact(obj)\r\n        this.reset()\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: ''})\r\n    }\r\n\r\n    render () {\r\n        const {name, number} = this.state\r\n        const {handleSubmit, handleChange, contactId, phoneId} = this\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div className={s.form}> \r\n                    <label htmlFor={contactId} className={s.formLabel}>\r\n                    Name\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        className={s.inputWindow}\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                        id={contactId}\r\n                    />\r\n                    </label>\r\n                    <label htmlFor={phoneId} className={s.formLabel}>\r\n                    Phone\r\n                    <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        className={s.inputWindow}\r\n                        value={number}\r\n                        onChange={handleChange}\r\n                        id={phoneId}\r\n                    />\r\n                    </label>\r\n                <button type='submit' title=\"Добавить контакт\" className={s.btn}>Add contact</button>\r\n          </div>\r\n    </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm","import PropTypes from 'prop-types'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Styles.module.scss';\r\n\r\nconst filterId = uuidv4()\r\n\r\nfunction Filter ({value, changeFilter}) {\r\n    return (\r\n    <div className={s.filterBox}>\r\n        <label htmlFor={filterId} className={s.filterLabel}>\r\n        \r\n        <input \r\n            type='text'\r\n            className={s.filterInput}\r\n            id={filterId}\r\n            placeholder=\"Find contacts by name\"\r\n            value={value}\r\n            onChange={changeFilter}\r\n        >\r\n        </input>\r\n        </label>\r\n    </div>\r\n    )\r\n    \r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n}\r\n  \r\nexport default Filter","import PropTypes from 'prop-types';\r\nimport s from './Styles.module.scss';\r\n\r\nfunction ContactList({ contacts, deleteContact }) {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.listItem}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            onClick={() => deleteContact(id)}\r\n            className={s.btn}\r\n            title=\"Удалить контакт\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  deleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\nimport s from './App.module.scss';\nimport ContactForm from './components/ContactForm'\nimport Filter from './components/Filter'\nimport ContactList from './components/ContactList '\n\nclass App extends Component {\n\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: ''\n  }\n\n  addNewContact = (obj) => {\n    const {name} = obj\n    const uniqueName = this.state.contacts\n      .map((e) => e.name.toLowerCase())\n      .includes(name.toLowerCase())\n    \n      if(uniqueName) {\n          alert(`${name} is already in contacts`)\n      } else {\n          this.setState({contact: obj});\n          this.setState((prevState) => {\n            return {\n              contacts: [...prevState.contacts, obj]\n            }})\n      }\n    \n  }\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value })\n  }\n\n  getVisibleContacts = () => {\n    const { filter, contacts} = this.state\n    const normalizeFilter = filter.toLowerCase()\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter))\n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(e => e.id !== contactId)\n    }))\n  }\n  componentDidMount() {\n    \n    const contacts=  localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts)\n\n    console.log(parsedContacts)\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts })\n    }\n\n    // this.setState({contacts: JSON.parse(localStorage.getItem(this.state.contacts))})\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      // console.log('обновилось поле');\n\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  render () {\n    const {getVisibleContacts, addNewContact, deleteContact, changeFilter} = this\n    const {filter} = this.state\n    const visibleContacts = getVisibleContacts()\n\n    return (\n      <div className={s.section}>\n        <h2 className={s.title}>Phonebook</h2>\n          <ContactForm newContact={addNewContact}/>\n        <h2 className={s.title}>Contacts</h2>\n          <Filter value={filter} changeFilter={changeFilter}/>\n          <ContactList contacts={visibleContacts} deleteContact={deleteContact} />\n      </div>\n    );\n  }\n  \n}   \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3YUOn\",\"section\":\"App_section__3DGMz\"};"],"sourceRoot":""}